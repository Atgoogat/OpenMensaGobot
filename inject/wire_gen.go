// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package inject

import (
	"github.com/Atgoogat/openmensarobot/config"
	"github.com/Atgoogat/openmensarobot/db"
	"github.com/Atgoogat/openmensarobot/domain"
	"github.com/Atgoogat/openmensarobot/telegrambotapi"
	"github.com/google/wire"
	"gorm.io/gorm"
)

// Injectors from wire.go:

func InitDatabaseConnection() (*gorm.DB, error) {
	db, err := config.NewDatabaseConnection()
	if err != nil {
		return nil, err
	}
	return db, nil
}

func InitTelegramApi() (*telegrambotapi.TelegramBotApi, error) {
	telegramBotApi, err := config.NewTelegramBotApi()
	if err != nil {
		return nil, err
	}
	return telegramBotApi, nil
}

func InitMsgService() (domain.MsgService, error) {
	telegramBotApi, err := InitTelegramApi()
	if err != nil {
		return domain.MsgService{}, err
	}
	gormDB, err := InitDatabaseConnection()
	if err != nil {
		return domain.MsgService{}, err
	}
	subscriberRepository := db.NewSubscriberRepository(gormDB)
	subscriberScheduler := domain.NewSubscriberScheduler()
	subscriberService := domain.NewSubscriberService(subscriberRepository, subscriberScheduler)
	cliService := domain.NewCliService(subscriberService)
	msgService := domain.NewMsgService(telegramBotApi, cliService)
	return msgService, nil
}

// wire.go:

var serviceSet = wire.NewSet(
	InitDatabaseConnection,
	InitTelegramApi, db.NewSubscriberRepository, domain.NewCliService, domain.NewMealService, domain.NewMsgService, domain.NewSubscriberScheduler, domain.NewSubscriberService,
)
